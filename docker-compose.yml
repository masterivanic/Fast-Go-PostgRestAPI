version: '3'
services:
    db:
      image: postgres:16-alpine3.20
      container_name: pgrest-db-container
      restart: unless-stopped    
      ports:
        - "5432:5432"
      expose:
        - "5432"    
      environment:
        - POSTGRES_DB=postgres_db
        - POSTGRES_USER=postgres_user
        - POSTGRES_PASSWORD=8Fny?aXEFkh9ePA3
      volumes:
        - "./postgres-data:/var/lib/postgresql/data"
        - "./initdb:/docker-entrypoint-initdb.d"
      networks:
        - my-demo-network

    server:
      build:
        context: .
        dockerfile: Dockerfile
      image: postgrest-custom
      container_name: pgrest-server
      volumes:
        - ./postgrest.conf:/etc/postgrest.conf
      ports:
        - "3000:3000"
      entrypoint: ["/postgrest/postgrest"]
      command: ["/etc/postgrest.conf"]
      links:
        - db:db
      depends_on:
        - db
      networks:
        - my-demo-network
      restart: unless-stopped

    swagger:
      image: swaggerapi/swagger-ui:v5.18.1
      container_name: api-documentation
      ports:
        - "8080:8080"
      expose:
        - "8080"
      environment:
        API_URL: http://localhost:3000/

    prometheus:
      image: prom/prometheus:v2.45.0
      container_name: prometheus
      volumes:
        - ./prometheus.yml:/etc/prometheus/prometheus.yml
      command:
        - '--config.file=/etc/prometheus/prometheus.yml'
      ports:
        - "9090:9090"
      networks:
        - my-demo-network

    grafana:
      image: grafana/grafana:10.1.0
      container_name: grafana
      ports:
        - "3001:3000"
      volumes:
        - grafana-data:/var/lib/grafana
      environment:
        - GF_SECURITY_ADMIN_PASSWORD=logarithme123
      depends_on:
        - prometheus
      networks:
        - my-demo-network

volumes:
  postgres-data:
  grafana-data:

networks:
  my-demo-network:
    driver: bridge
