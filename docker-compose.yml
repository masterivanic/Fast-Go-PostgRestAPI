services:
    db:
      image: postgres:16-alpine3.20
      container_name: pgrest-db-container
      restart: unless-stopped    
      ports:
        - "5432:5432"
      expose:
        - "5432"    
      environment:
        - POSTGRES_DB=${POSTGRES_DB}
        - POSTGRES_USER=${POSTGRES_USER}
        - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      healthcheck:
        test: ["CMD-SHELL", "pg_isready -d ${POSTGRES_DB} -U ${POSTGRES_USER}"]
        interval: 5s
        timeout: 5s
        retries: 5
      volumes:
        - "postgres-data:/var/lib/postgresql/data"
        - "./initdb:/docker-entrypoint-initdb.d"
      networks:
        - my-demo-network

    server:
      build:
        context: .
        dockerfile: Dockerfile
      image: postgrest-custom
      container_name: pgrest-server
      volumes:
        - ./postgrest.conf.template:/etc/postgrest.conf.template
      ports:
        - "3000:3000"
        - "3001:3001"
      env_file:
        - .env
      entrypoint: ["/bin/sh", "-c"]
      command:
        - |
          cp /etc/postgrest.conf.template /etc/postgrest.conf
          envsubst < /etc/postgrest.conf > /etc/postgrest.conf.tmp && mv /etc/postgrest.conf.tmp /etc/postgrest.conf
          /postgrest/postgrest /etc/postgrest.conf
      links:
        - db:db
      depends_on:
        - db
      networks:
        - my-demo-network
      restart: unless-stopped

    swagger:
      image: swaggerapi/swagger-ui:v5.18.1
      container_name: api-documentation
      ports:
        - "8080:8080"
      expose:
        - "8080"
      environment:
        API_URL: http://localhost:3000/

    prometheus:
      image: prom/prometheus:v2.45.0
      container_name: prometheus
      restart: unless-stopped
      volumes:
        - ./prometheus.yml:/etc/prometheus/prometheus.yml
      command:
        - '--config.file=/etc/prometheus/prometheus.yml'
        - '--web.listen-address=0.0.0.0:9091'
        - '--storage.tsdb.path=/prometheus'
        - '--web.console.libraries=/usr/share/prometheus/console_libraries'
        - '--web.console.templates=/usr/share/prometheus/consoles'
      ports:
        - "9091:9091"
      networks:
        - my-demo-network

    grafana:
      image: grafana/grafana:10.1.0
      container_name: grafana
      restart: unless-stopped
      ports:
         - "3002:3000"
      volumes:
        - grafana-data:/var/lib/grafana
      environment:
        - GF_SERVER_HTTP_PORT=3000
        - GF_SECURITY_ADMIN_PASSWORD=${GF_SECURITY_ADMIN_PASSWORD}
      depends_on:
        - prometheus
      networks:
        - my-demo-network

    postgresql-exporter:
      image: prometheuscommunity/postgres-exporter
      container_name: postgresql-exporter
      ports:
          - "9187:9187"
      environment:
         DATA_SOURCE_NAME: "postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}?sslmode=disable"
      depends_on:
        prometheus:
          condition: service_started
        db:
          condition: service_healthy
      restart: unless-stopped
      networks:
        - my-demo-network

volumes:
  postgres-data:
  grafana-data:

networks:
  my-demo-network:
    driver: bridge
